# Generated by Django 3.2 on 2022-12-25 01:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mdeditor.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('name', models.CharField(max_length=100, verbose_name='名称')),
                ('objname', models.CharField(max_length=100, verbose_name='类名')),
                ('isok', models.BooleanField(default=True, verbose_name='是否可用')),
            ],
            options={
                'verbose_name': '测评语言',
                'verbose_name_plural': '测评语言',
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('title', models.CharField(max_length=100, verbose_name='标题')),
                ('text', mdeditor.fields.MDTextField(default='', verbose_name='内容')),
                ('islook', models.BooleanField(default=True, verbose_name='是否可查看')),
                ('max_time', models.IntegerField(default=1000, verbose_name='最大时间(ms)')),
                ('max_memory', models.IntegerField(default=128, verbose_name='最大内存(MB)')),
                ('islookans', models.BooleanField(default=False, verbose_name='是否可查看答案')),
                ('foruser', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '题目',
                'verbose_name_plural': '题目',
            },
        ),
        migrations.CreateModel(
            name='ProblemTag',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('text', models.CharField(max_length=100, verbose_name='内容')),
                ('color', models.CharField(default='#6DEF8D', max_length=20, verbose_name='颜色')),
            ],
            options={
                'verbose_name': '题目标签',
                'verbose_name_plural': '题目标签',
            },
        ),
        migrations.CreateModel(
            name='Record_Tasks',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('use_time', models.IntegerField(default=0, verbose_name='使用时间(s)')),
                ('use_memory', models.IntegerField(default=0, verbose_name='使用内存(MB)')),
                ('stats', models.CharField(choices=[('AC', 'Accept'), ('WA', 'Wrong Answer'), ('CE', 'Compile Error'), ('PC', 'Partially Correct'), ('RE', 'Runtime Error'), ('TLE', 'Time Limit Exceeded'), ('MLE', 'Memory Limit Exceeded'), ('OLE', 'Output Limit Exceeded'), ('UKE', 'Unknown Error'), ('LBE', 'Libray Error'), ('SVE', 'Sever Error'), ('DBE', 'Databases Error'), ('WI', 'Waiting')], default='WI', max_length=15, verbose_name='状态')),
                ('stdins', models.TextField(blank=True, null=True, verbose_name='输入')),
                ('stdouts', models.TextField(blank=True, null=True, verbose_name='输出')),
                ('stdanss', models.TextField(blank=True, null=True, verbose_name='答案')),
                ('score', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': '子测试点',
                'verbose_name_plural': '子测试点',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('inp', models.TextField(blank=True, null=True, verbose_name='输入')),
                ('ans', models.TextField(blank=True, null=True, verbose_name='答案')),
                ('score', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': '测试点',
                'verbose_name_plural': '测试点',
            },
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, verbose_name='id')),
                ('islook', models.BooleanField(default=True, verbose_name='是否可查看')),
                ('islookans', models.BooleanField(default=False, verbose_name='是否可查看答案')),
                ('isok', models.BooleanField(default=False, verbose_name='是否测评')),
                ('use_time', models.IntegerField(default=0, verbose_name='使用时间(s)')),
                ('use_memory', models.IntegerField(default=0, verbose_name='使用内存(MB)')),
                ('upcode', models.TextField(blank=True, null=True, verbose_name='提交代码')),
                ('stats', models.CharField(choices=[('AC', 'Accept'), ('UC', 'Unaccepted'), ('CE', 'Compile Error'), ('JI', 'Judging')], default='JI', max_length=15, verbose_name='状态')),
                ('crtime', models.DateTimeField(auto_now=True)),
                ('score', models.IntegerField(default=0)),
                ('outhertings', models.TextField(blank=True, null=True, verbose_name='stderr')),
                ('childtask', models.ManyToManyField(blank=True, null=True, to='judger.Record_Tasks')),
                ('forlanguage', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='judger.language')),
                ('forproblem', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='judger.problem')),
                ('foruser', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '测评任务',
                'verbose_name_plural': '测评任务',
                'ordering': ['-crtime'],
            },
        ),
        migrations.AddField(
            model_name='problem',
            name='tags',
            field=models.ManyToManyField(to='judger.ProblemTag'),
        ),
        migrations.AddField(
            model_name='problem',
            name='tasks',
            field=models.ManyToManyField(to='judger.Task'),
        ),
    ]
